# MCP Language Server Environment Configuration
# Copy this file to .env and modify the values as needed

# =============================================================================
# General Configuration
# =============================================================================

# Logging level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO

# =============================================================================
# Port Configuration
# =============================================================================

# Individual language server ports
MCP_TYPESCRIPT_PORT=8080
MCP_GO_PORT=8081
MCP_PYTHON_PORT=8082
MCP_RUST_PORT=8083
MCP_CLANGD_PORT=8084
MCP_ALL_PORT=8085

# =============================================================================
# Workspace Paths
# =============================================================================

# Default workspace for all languages
WORKSPACE_PATH=./workspace

# Language-specific workspace paths (override WORKSPACE_PATH for specific languages)
# Use absolute paths or paths relative to docker-compose.yml location
GO_WORKSPACE_PATH=./go-workspace
PYTHON_WORKSPACE_PATH=./python-workspace
RUST_WORKSPACE_PATH=./rust-workspace
CLANGD_WORKSPACE_PATH=./clangd-workspace
ALL_WORKSPACE_PATH=./workspace

# =============================================================================
# Language Server Specific Configuration
# =============================================================================

# For mcp-all service - which language server to use by default
# Options: typescript, go, python, rust, clangd
ALL_LANGUAGE_SERVER_TYPE=typescript

# Individual service language server types (normally you won't need to change these)
TYPESCRIPT_LANGUAGE_SERVER_TYPE=typescript
GO_LANGUAGE_SERVER_TYPE=go
PYTHON_LANGUAGE_SERVER_TYPE=python
RUST_LANGUAGE_SERVER_TYPE=rust
CLANGD_LANGUAGE_SERVER_TYPE=clangd

# =============================================================================
# Service-Specific MCP Configuration
# =============================================================================

# TypeScript service configuration
TYPESCRIPT_MCP_MODE=http
TYPESCRIPT_MCP_PORT=8080
TYPESCRIPT_WORKSPACE_DIR=/workspace

# Go service configuration  
GO_MCP_MODE=http
GO_MCP_PORT=8080
GO_WORKSPACE_DIR=/workspace
GO_GOPATH=/go
GO_GOCACHE=/root/.cache/go-build
GO_GOMODCACHE=/go/pkg/mod

# Python service configuration
PYTHON_MCP_MODE=http
PYTHON_MCP_PORT=8080
PYTHON_WORKSPACE_DIR=/workspace

# Rust service configuration
RUST_MCP_MODE=http
RUST_MCP_PORT=8080
RUST_WORKSPACE_DIR=/workspace

# C/C++ (clangd) service configuration
CLANGD_MCP_MODE=http
CLANGD_MCP_PORT=8080
CLANGD_WORKSPACE_DIR=/workspace

# All-in-one service configuration
ALL_MCP_MODE=http
ALL_MCP_PORT=8080
ALL_WORKSPACE_DIR=/workspace

# =============================================================================
# Cache and Performance Configuration
# =============================================================================

# Go build cache (improves build performance for Go projects)
GO_CACHE_PATH=go-cache

# Go module cache (improves dependency download for Go projects)
GO_MOD_CACHE_PATH=go-mod-cache

# Cargo cache (improves build performance for Rust projects)
CARGO_CACHE_PATH=cargo-cache

# =============================================================================
# Example Configurations for Different Use Cases
# =============================================================================

# Example 1: TypeScript Development
# MCP_TYPESCRIPT_PORT=8080
# WORKSPACE_PATH=./my-typescript-project
# TYPESCRIPT_LANGUAGE_SERVER_TYPE=typescript
# TYPESCRIPT_MCP_MODE=http

# Example 2: Go Development
# MCP_GO_PORT=8081
# GO_WORKSPACE_PATH=./my-go-project
# GO_LANGUAGE_SERVER_TYPE=go
# GO_MCP_MODE=http

# Example 3: Python Development
# MCP_PYTHON_PORT=8082
# PYTHON_WORKSPACE_PATH=./my-python-project
# PYTHON_LANGUAGE_SERVER_TYPE=python
# PYTHON_MCP_MODE=http

# Example 4: Rust Development
# MCP_RUST_PORT=8083
# RUST_WORKSPACE_PATH=./my-rust-project
# RUST_LANGUAGE_SERVER_TYPE=rust
# RUST_MCP_MODE=http

# Example 5: C/C++ Development
# MCP_CLANGD_PORT=8084
# CLANGD_WORKSPACE_PATH=./my-cpp-project
# CLANGD_LANGUAGE_SERVER_TYPE=clangd
# CLANGD_MCP_MODE=http

# Example 6: Custom all-in-one configuration
# MCP_ALL_PORT=8085
# ALL_WORKSPACE_PATH=./my-project
# ALL_LANGUAGE_SERVER_TYPE=go
# ALL_MCP_MODE=http

# =============================================================================
# MetaMCP Server Configuration Examples
# =============================================================================

# When connecting from your MetaMCP server, use these endpoints:

# Single language server:
# TYPESCRIPT_ENDPOINT=http://your-host:8080
# GO_ENDPOINT=http://your-host:8081
# PYTHON_ENDPOINT=http://your-host:8082
# RUST_ENDPOINT=http://your-host:8083
# CLANGD_ENDPOINT=http://your-host:8084

# Note: If you want reverse proxy functionality, configure your own 
# reverse proxy (like Traefik) to route to these individual endpoints
